const express = require('express');
const axios = require('axios');
const app = express();

const CLIENT_ID = '152929';
const CLIENT_SECRET = '6c032fa7fa9e10387cd92a2e3d53a7beaaaf6a47';
const REDIRECT_URI = 'http://localhost:3000/callback';

// Passo 1: Redirecionar o usuário para a página de autorização
app.get('/auth/strava', (req, res) => {
    const authUrl = `https://www.strava.com/oauth/authorize?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=code&scope=read_all,profile:read_all&approval_prompt=force`;
    console.log(`Redirecionando para: ${authUrl}`); // Log de depuração
    res.redirect(authUrl);
});

// Passo 2: Receber o código de autorização
app.get('/callback', async (req, res) => {
    const code = req.query.code;
    console.log(`Código recebido: ${code}`); // Log de depuração

    if (!code) {
        return res.status(400).send('Erro: Código de autorização não recebido.');
    }

    // Passo 3: Trocar o código por um token de acesso
    try {
        const response = await axios.post('https://www.strava.com/oauth/token', {
            client_id: CLIENT_ID,
            client_secret: CLIENT_SECRET,
            code: code,
            grant_type: 'authorization_code'
        });

        const accessToken = response.data.access_token;
        console.log(`Token de acesso recebido: ${accessToken}`); // Log de depuração
        res.send(`Token de acesso: ${accessToken}`);
    } catch (error) {
        console.error('Erro ao obter o token de acesso:', error.response ? error.response.data : error.message); // Log de erro
        res.status(500).send('Erro ao obter o token de acesso.');
    }
});

app.listen(3000, () => {
    console.log('Servidor rodando em http://localhost:3000');
});
